jobs:
- job: CodeBuild
  pool:
    name: DAS - Continuous Integration
  variables:
  - group: BUILD Management Resources
  - name: SonarCloudProjectKey
    value: SkillsFundingAgency_das-apprentice-commitments-web
  steps:
    - task: gittools.gittools.setup-gitversion-task.gitversion/setup@0
      displayName: gitversion/setup
      inputs:
        versionSpec: 5.x

    - task: gittools.gittools.execute-gitversion-task.gitversion/execute@0
      displayName: gitversion/execute
      inputs:
        useConfigFile: true
        configFilePath: GitVersion.yml

    - task: SonarCloudPrepare@1
      displayName: Prepare SonarCloud analysis configuration
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'),eq(variables['Build.Reason'], 'PullRequest')))
      inputs:
        SonarCloud: ESFA - SonarCloud
        organization: "$(SonarCloudOrganisationKey)"
        scannerMode: MSBuild
        projectName: "$(Build.DefinitionName)"
        projectKey: "$(SonarCloudProjectKey)"

    - template: azure-pipelines-templates/build/step/app-build.yml@das-platform-building-blocks

    - task: SonarCloudAnalyze@1
      displayName: Run SonarCloud analysis
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'),eq(variables['Build.Reason'], 'PullRequest')))

    - task: SonarCloudPublish@1
      displayName: Publish SonarCloud analysis results on build summary
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'),eq(variables['Build.Reason'], 'PullRequest')))
      inputs:
        pollingTimeoutSec: '300'      

    - template: azure-pipelines-templates/build/step/dependency-check.yml@das-platform-building-blocks

    - task: DotNetCoreCLI@2
      displayName: "Publish - dotnet publish $(SolutionBaseName)"
      inputs:
        command: publish
        publishWebProjects: false #set to false as this setting (which defaults to true) will parse the entire repo for web projects
        projects: "src/$(SolutionBaseName)/$(SolutionBaseName).csproj"
        arguments: "-o $(build.artifactstagingdirectory)/publish -c $(BuildConfiguration) --no-build"
        modifyOutputPath: true

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)/publish'
      inputs:
        Contents: |
          azure/**
        TargetFolder: '$(build.artifactstagingdirectory)/publish'
        OverWrite: true
    
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifact: drop'
      inputs:
        targetPath: $(build.artifactstagingdirectory)/publish
        artifactName: drop
