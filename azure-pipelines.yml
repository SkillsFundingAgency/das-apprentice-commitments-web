trigger:
  batch: true
  branches:
    include:
      - "*"

pr: none

workspace:
  clean: all

variables:
- name: SolutionBaseName
  value: '__SolutionBaseName__'
- name: BuildPlatform
  value : 'any cpu'
- name: BuildConfiguration
  value: 'release'

pool:
  name: 'DAS - Continuous Integration'

resources:
  repositories:
  - repository: self
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    ref: refs/heads/master
    endpoint: 'GitHub (SFA)'

steps:
  - task: gittools.gittools.setup-gitversion-task.gitversion/setup@0
    displayName: gitversion/setup
    inputs:
      versionSpec: 5.x

  - task: gittools.gittools.execute-gitversion-task.gitversion/execute@0
    displayName: gitversion/execute
    inputs:
      useConfigFile: true
      configFilePath: GitVersion.yml    

  - template: azure-pipelines-templates/build/step/app-build.yml@das-platform-building-blocks        

  - template: azure-pipelines-templates/dependency-check.yml@das-platform-building-blocks

  - task: DotNetCoreCLI@2
    displayName: "Publish - dotnet publish $(SolutionBaseName)"
    inputs:
      command: publish
      publishWebProjects: false #set to false as this setting (which defaults to true) will parse the entire repo for web projects
      projects: "src/$(SolutionBaseName)/$(SolutionBaseName).csproj"
      arguments: "-o $(build.artifactstagingdirectory)/publish -c $(BuildConfiguration) --no-build"
      zipAfterPublish: false
      modifyOutputPath: true

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)/publish'
    inputs:
      Contents: |
        azure/**
      TargetFolder: '$(build.artifactstagingdirectory)/publish'
      OverWrite: true
  
  - task: PublishPipelineArtifact@1
    displayName: 'Publish Artifact: drop'
    inputs:
      targetPath: $(build.artifactstagingdirectory)/publish
      artifactName: drop